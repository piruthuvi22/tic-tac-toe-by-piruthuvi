{"version":3,"sources":["index.js","corona.gif","human.gif","pop1.mp3","pop2.mp3","music.mp3"],"names":["corona","require","human","t1","t2","music","bleep","Audio","src","tone1","tone2","Square","props","className","onClick","value","alt","width","Board","state","squares","Array","fill","xIsNext","input1","input2","submit1","submit2","style","handleChange1","bind","handleChange2","handleSubmit","event","this","setState","target","document","getElementById","display","preventDefault","x","i","slice","calculateWinner","play","handleClick","status","winner","onSubmit","id","input","onChange","required","type","window","location","reload","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.e00d3385.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css';\nconst corona = require(\"./corona.gif\");\nconst human = require(\"./human.gif\");\nconst t1 = require(\"./pop1.mp3\");\nconst t2 = require(\"./pop2.mp3\");\nconst music = require(\"./music.mp3\");\n\n\nvar bleep = new Audio();\nbleep.src = music;\n\nvar tone1 = new Audio();\ntone1.src = t1;\n\nvar tone2 = new Audio();\ntone2.src = t2;\n\n// render a single button\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n\n            <img src={props.value} alt=\"\" width={200} />\n        </button>\n    );\n}\n\n// render 9 squares\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: Array(9).fill(null),\n            xIsNext: true,\n            input1: '',\n            input2: '',\n            submit1: '',\n            submit2: '',\n            style: \"\"\n\n        };\n        this.handleChange1 = this.handleChange1.bind(this);\n        this.handleChange2 = this.handleChange2.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange1(event) {\n        this.setState({\n            input1: event.target.value\n        });\n    }\n    handleChange2(event) {\n        this.setState({\n            input2: event.target.value\n        });\n    }\n    handleSubmit(event) {\n        var x = document.getElementById(\"gameBoard\");\n        x.style.display = \"block\";\n\n\n        event.preventDefault()\n        this.setState({\n            submit1: this.state.input1,\n            submit2: this.state.input2,\n            style: this.state.x\n\n        });\n    }\n\n    handleClick(i) {\n        const squares = this.state.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        // squares[i] = this.state.xIsNext ? 'X' : 'O';\n        if (this.state.xIsNext) {\n            squares[i] = corona\n            // squares[i] = \"X\"\n            tone1.play();\n        }\n        else {\n            squares[i] = human\n            // squares[i] = \"O\"\n            tone2.play()\n        }\n        this.setState({\n            squares: squares,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n    renderSquare(i) {\n        return <Square value={this.state.squares[i]} onClick={() => this.handleClick(i)} />;\n    }\n\n    render() {\n        const winner = calculateWinner(this.state.squares);\n        let status;\n        if (winner) {\n            if (winner === corona) {\n                status = <h2>Winner  : {this.state.submit1}</h2>\n                bleep.play();\n            }\n            else {\n                status = <h2>Winner  : {this.state.submit2}</h2>\n                bleep.play();\n\n            }\n        } else {\n            status = <h4>Next player:  {(this.state.xIsNext ? this.state.submit1 : this.state.submit2)}</h4>\n\n        }\n\n        function refreshPage() {\n            window.location.reload(false);\n        }\n\n        return (\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <img className=\"w-50 mt-3\" alt=\"\" src=\"https://cdn.clipart.email/0fc370ce506fb192d74fdcd74c4eae94_stone-clip-tic-tac-transparent-png-clipart-free-download-ywd_1198-366.gif\"></img>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-3 mt-3\">\n                        <form onSubmit={this.handleSubmit}>\n                            <div className=\"form-group\">\n                                <span>Player 1</span>\n                                <input\n                                    id=\"inputtext\"\n                                    className=\"form-control\"\n                                    value={this.state.input}\n                                    onChange={this.handleChange1} required />\n                            </div>\n                            <div className=\"form-group\">\n                                <span>Player 2</span>\n                                <input\n                                    id=\"inputtext\"\n                                    className=\"form-control\"\n                                    value={this.state.input}\n                                    onChange={this.handleChange2} required />\n                            </div>\n                            <button id=\"submit\" className=\"btn btn-success mb-3\" type='submit' >Submit!</button>\n                        </form>\n                        <button onClick={refreshPage} className=\"btn btn-success mb-3\" >Restart!</button>\n                        <h5>Player 1 : {this.state.submit1}</h5>\n                        <h5>Player 2 : {this.state.submit2}</h5>\n                        <div className=\"status\">{status}</div>\n\n                    </div>\n\n                    <div className=\"col-9 mt-3\" >\n                        <div id=\"gameBoard\">\n                            <div className=\"board-row\">\n                                {this.renderSquare(0)}\n                                {this.renderSquare(1)}\n                                {this.renderSquare(2)}\n                            </div>\n                            <div className=\"board-row\">\n                                {this.renderSquare(3)}\n                                {this.renderSquare(4)}\n                                {this.renderSquare(5)}\n                            </div>\n                            <div className=\"board-row\">\n                                {this.renderSquare(6)}\n                                {this.renderSquare(7)}\n                                {this.renderSquare(8)}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    render() {\n        return (\n            <div className=\"\">\n                <div className=\"game-board\">\n                    <Board />\n                </div>\n                <div className=\"game-info\">\n                    <div>{/* status */}</div>\n                    <ol>{/* TODO */}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/corona.e00229b8.gif\";","module.exports = __webpack_public_path__ + \"static/media/human.fb69b0b9.gif\";","module.exports = __webpack_public_path__ + \"static/media/pop1.cb965701.mp3\";","module.exports = __webpack_public_path__ + \"static/media/pop2.f4051d60.mp3\";","module.exports = __webpack_public_path__ + \"static/media/music.a92faed7.mp3\";"],"sourceRoot":""}